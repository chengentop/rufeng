package com.rufeng.business.pms.service.impl;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;

import com.rufeng.core.framework.db.Pager;
import com.rufeng.core.framework.web.ResultData;
import com.rufeng.business.pms.mapper.IProductCategoryDao;
import com.rufeng.business.pms.domain.po.ProductCategory;
import com.rufeng.business.pms.service.IProductCategoryService;

/**
 * 产品分类Service业务层处理
 *
 * @author chg
 * @date 2021-03-11
 */
@Service
public class ProductCategoryServiceImpl extends ServiceImpl<IProductCategoryDao, ProductCategory> implements IProductCategoryService {
    private Logger log = LoggerFactory.getLogger(ProductCategoryServiceImpl.class);

    @Autowired
    private IProductCategoryDao productCategoryDao;

    /**
     * 查询产品分类
     *
     * @param id 产品分类ID
     * @return 产品分类
     */
    @Override
    public ResultData get(Long id) {
        log.debug("[服务] 开始根据id查询产品分类 id=[{}]. ", id);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        ProductCategory productCategory = getById(id);
        resData.setData("productCategory", productCategory);
        log.info("[服务] 完成根据id查询产品分类 ResultData=[{}]", resData);
        return resData;
    }

    /**
     * 查询产品分类列表
     *
     * @param productCategory 产品分类
     * @return 产品分类
     */
    @Override
    public ResultData list(ProductCategory productCategory) {
        log.debug("[服务] 开始根据条件{}查询参数配置", productCategory);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        QueryWrapper<ProductCategory> productCategoryWrapper = new QueryWrapper<>();
        productCategoryWrapper.setEntity(productCategory);
        List<ProductCategory> productCategorys = list(productCategoryWrapper);
        resData.setData("productCategorys", productCategorys);
        log.info("[服务] 完成查询参数配置 ResultData=[{}]", resData);
        return resData;
    }

    /**
     * 查询产品分类列表
     *
     * @param productCategory 产品分类
     * @return 产品分类
     */
    @Override
    public ResultData listPager(ProductCategory productCategory, Pager pager) {
        log.debug("[服务] 开始根据条件{}分页查询产品分类", productCategory);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        Page<ProductCategory> pageParam = new Page<>(pager.getCurrentPage(), pager.getTotalSize()); // 当前页码，每页条数
        QueryWrapper<ProductCategory> productCategoryWrapper = new QueryWrapper<>();
        productCategoryWrapper.setEntity(productCategory);
        Page<ProductCategory> page = page(pageParam, productCategoryWrapper);
        resData.setData("data", page);
        log.info("[服务] 完成根据条件{}分页查询产品分类 ResultData=[{}]", resData);
        return resData;
    }

    /**
     * 新增产品分类
     *
     * @param productCategory 产品分类
     * @return 结果
     */
    @Override
    public ResultData add(ProductCategory productCategory) {
        log.debug("[服务] 开始添加新增产品分类, productCategory=[{}]", productCategory);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        boolean flag = save(productCategory);
        resData.setData("flag", flag);
        log.info("[服务] 完成新增产品分类，ResultData=[{}]", resData);
        return resData;
    }

    /**
     * 修改产品分类
     *
     * @param productCategory 产品分类
     * @return 结果
     */
    @Override
    public ResultData update(ProductCategory productCategory) {
        log.debug("[服务] 开始根据条件{}修改产品分类,sysconfig=[{}]", productCategory);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        boolean flag = updateById(productCategory);
        resData.setData("flag", flag);
        log.info("[服务] 完成修改参数配置，resData=[{}]", resData);
        return resData;
    }

    /**
     * 删除产品分类信息
     *
     * @param id 产品分类ID
     * @return 结果
     */
    @Override
    public ResultData delete(Long id) {
        log.debug("[服务] 开始根据条件id{}删除产品分类,id=[{}]", id);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        boolean flag = removeById(id);
        resData.setData("flag", flag);
        log.info("[服务] 完成删除参数配置，resData=[{}]", resData);
        return resData;
    }
}
