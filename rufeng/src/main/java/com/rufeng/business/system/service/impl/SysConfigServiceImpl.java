package com.rufeng.business.system.service.impl;


import java.util.Collection;
import java.util.List;

import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import com.rufeng.core.framework.common.constant.Constants;
import com.rufeng.core.framework.common.core.text.Convert;
import com.rufeng.core.framework.redis.RedisCache;
import com.rufeng.core.utils.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;

import com.rufeng.core.framework.db.Pager;
import com.rufeng.core.framework.web.ResultData;
import com.rufeng.business.system.service.ISysConfigService;
import com.rufeng.business.system.mapper.ISysConfigDao;
import com.rufeng.business.system.domain.po.SysConfig;

import static com.rufeng.core.utils.DictUtils.getCacheKey;


/**
 * 参数配置 服务接口实现
 *
 * @version v1.0.0
 * @since jdk1.8+
 */
@Service
public class SysConfigServiceImpl extends ServiceImpl<ISysConfigDao, SysConfig> implements ISysConfigService {
    private Logger log = LoggerFactory.getLogger(SysConfigServiceImpl.class);

    @Autowired
    private ISysConfigDao sysconfigDao;
    @Autowired
    private RedisCache redisCache;

    @Override
    public ResultData get(String config_id) throws Exception {
        log.debug("###[服务] 开始查询参数配置 config_id=[{}]. ", config_id);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        SysConfig sysconfig = sysconfigDao.selectById(config_id);
        resData.setData("sysconfig", sysconfig);
        log.info("###[服务] 完成查询参数配置 ResultData=[{}]", resData);
        return resData;
    }

    @Override
    public ResultData list(SysConfig sysconfig) throws Exception {
        log.debug("###[服务] 开始根据条件{}查询参数配置", sysconfig);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        QueryWrapper<SysConfig> sysconfigWrapper = new QueryWrapper<>();
        sysconfigWrapper.setEntity(sysconfig);
        List<SysConfig> sysconfigs = sysconfigDao.selectList(sysconfigWrapper);
        resData.setData("sysconfigs", sysconfigs);
        log.info("###[服务] 完成查询参数配置 ResultData=[{}]", resData);
        return resData;
    }

    @Override
    public ResultData listPager(SysConfig sysconfig, Pager page) throws Exception {
        log.debug("###[服务] 开始根据条件{}分页查询参数配置", sysconfig);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        Page<SysConfig> pageParam = new Page<>(page.getCurrentPage(), page.getTotalSize()); // 当前页码，每页条数
        QueryWrapper<SysConfig> sysconfigWrapper = new QueryWrapper<>();
        sysconfigWrapper.setEntity(sysconfig);
        IPage<SysConfig> pu = sysconfigDao.selectPage(pageParam, sysconfigWrapper);
        resData.setData("data", pu);

        log.info("###[服务] 完成分页查询参数配置 resData=[{}]", resData);
        return resData;
    }

    @Override
    public ResultData add(SysConfig sysconfig) throws Exception {
        log.debug("###[服务] 开始添加新参数配置, {}", sysconfig);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        int inserted = sysconfigDao.insert(sysconfig);
        resData.setData("inserted", inserted);
        log.info("###[服务] 完成添加新参数配置，ResultData=[{}]", resData);
        return resData;
    }

    @Override
    public ResultData update(SysConfig sysconfig) throws Exception {
        log.debug("###[服务] 开始根据条件{}修改参数配置,", sysconfig);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        int updated = sysconfigDao.updateById(sysconfig);
        resData.setData("updated", updated);
        log.info("###[服务] 完成修改参数配置，ResultData=[{}]", resData);
        return resData;
    }

    @Override
    public ResultData delete(String configid) throws Exception {
        log.debug("###[服务] 开始根据条件{}删除参数配置,", configid);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        SysConfig sysconfig = new SysConfig();
        sysconfig.setConfigid(Long.valueOf(configid));
        int deleted = sysconfigDao.deleteById(sysconfig);
        resData.setData("deleted", deleted);
        log.info("###[服务] 完成删除参数配置，ResultData=[{}]", resData);
        return resData;
    }

    @Override
    public ResultData selectConfigByKey(String configKey) {
        ResultData data = ResultData.init();
        String configValue = Convert.toStr(redisCache.getCacheObject(getCacheKey(configKey)));
        if (StringUtils.isNotEmpty(configValue)) {
            data.setData("config", configValue);
            return data;
        }
        SysConfig config = new SysConfig();
        config.setConfigkey(configKey);
        QueryWrapper<SysConfig> queryWrapper = new QueryWrapper<>();
        queryWrapper.setEntity(config);
        SysConfig sysConfig = sysconfigDao.selectOne(queryWrapper);
        if (StringUtils.isNotNull(sysConfig)) {
            redisCache.setCacheObject(getCacheKey(configKey), sysConfig.getConfigvalue());
            data.setData("config", sysConfig.getConfigvalue());
            return data;
        }
        return null;
    }

    @Override
    public void clearCache() {
        Collection<String> keys = redisCache.keys(Constants.SYS_CONFIG_KEY + "*");
        redisCache.deleteObject(keys);
    }
}
