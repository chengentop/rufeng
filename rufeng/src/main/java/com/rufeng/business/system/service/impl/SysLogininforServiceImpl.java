package com.rufeng.business.system.service.impl;


import java.util.List;

import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;

import com.rufeng.core.framework.db.Pager;
import com.rufeng.core.framework.web.ResultData;
import com.rufeng.business.system.service.ISysLogininforService;
import com.rufeng.business.system.mapper.ISysLogininforDao;
import com.rufeng.business.system.domain.po.SysLogininfor;


/**
 * 系统访问记录 服务接口实现
 *
 * @version v1.0.0
 * @since jdk1.8+
 */
@Service
public class SysLogininforServiceImpl extends ServiceImpl<ISysLogininforDao, SysLogininfor> implements ISysLogininforService {
    private Logger log = LoggerFactory.getLogger(SysLogininforServiceImpl.class);

    @Autowired
    private ISysLogininforDao syslogininforDao;

    @Override
    public ResultData get(String infoid) throws Exception {
        log.debug("###[服务] 开始查询系统访问记录 infoid=[{}]. ", infoid);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        SysLogininfor syslogininfor = syslogininforDao.selectById(infoid);
        resData.setData("syslogininfor", syslogininfor);
        log.info("###[服务] 完成查询系统访问记录 ResultData=[{}]", resData);
        return resData;
    }

    @Override
    public ResultData list(SysLogininfor syslogininfor) throws Exception {
        log.debug("###[服务] 开始根据条件{}查询系统访问记录", syslogininfor);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        QueryWrapper<SysLogininfor> syslogininforWrapper = new QueryWrapper<>();
        syslogininforWrapper.setEntity(syslogininfor);
        List<SysLogininfor> syslogininfors = syslogininforDao.selectList(syslogininforWrapper);
        resData.setData("syslogininfors", syslogininfors);
        log.info("###[服务] 完成查询系统访问记录 ResultData=[{}]", resData);
        return resData;
    }

    @Override
    public ResultData listPager(SysLogininfor syslogininfor, Pager page) throws Exception {
        log.debug("###[服务] 开始根据条件{}分页查询系统访问记录", syslogininfor);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        Page<SysLogininfor> pageParam = new Page<>(page.getCurrentPage(), page.getTotalSize()); // 当前页码，每页条数
        QueryWrapper<SysLogininfor> syslogininforWrapper = new QueryWrapper<>();
        syslogininforWrapper.setEntity(syslogininfor);
        IPage<SysLogininfor> pu = syslogininforDao.selectPage(pageParam, syslogininforWrapper);
        resData.setData("data", pu);

        log.info("###[服务] 完成分页查询系统访问记录 resData=[{}]", resData);
        return resData;
    }

    @Override
    public ResultData add(SysLogininfor syslogininfor) throws Exception {
        log.debug("###[服务] 开始添加系统访问记录", syslogininfor);
        ResultData resData = ResultData.init();
        int insert = syslogininforDao.insert(syslogininfor);
        resData.setData("add", insert == 1 ? true : false);
        log.info("###[服务] 完成添加系统访问记录 resData=[{}]", resData);
        return resData;
    }


    @Override
    public ResultData delete(String infoid) throws Exception {
        log.debug("###[服务] 开始根据条件{}删除系统访问记录,", infoid);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        SysLogininfor syslogininfor = new SysLogininfor();
        syslogininfor.setInfoid(Long.valueOf(infoid));
        int deleted = syslogininforDao.deleteById(syslogininfor);
        resData.setData("deleted", deleted);
        log.info("###[服务] 完成删除系统访问记录，ResultData=[{}]", resData);
        return resData;
    }

    @Override
    public ResultData cleanLogininfor() {
        log.debug("###[服务] 开始清空登录日志表数据");
        ResultData resData = ResultData.init();
        int i = syslogininforDao.cleanLogininfor();
        resData.setData("clean", i == 1 ? true : false);
        log.info("###[服务] 完成删除系统访问记录，ResultData=[{}]", resData);
        return resData;
    }
}
