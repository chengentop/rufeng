package com.rufeng.business.system.service.impl;


import java.util.List;

import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import com.rufeng.core.utils.DictUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;

import com.rufeng.core.framework.db.Pager;
import com.rufeng.core.framework.web.ResultData;
import com.rufeng.business.system.service.ISysDictTypeService;
import com.rufeng.business.system.mapper.ISysDictTypeDao;
import com.rufeng.business.system.domain.po.SysDictType;


/**
 * 字典类型 服务接口实现
 *
 * @version v1.0.0
 * @since jdk1.8+
 */
@Service
public class SysDictTypeServiceImpl extends ServiceImpl<ISysDictTypeDao, SysDictType> implements ISysDictTypeService {
    private Logger log = LoggerFactory.getLogger(SysDictTypeServiceImpl.class);

    @Autowired
    private ISysDictTypeDao sysdicttypeDao;

    @Override
    public ResultData get(String dictid) throws Exception {
        log.debug("###[服务] 开始查询字典类型 dictid=[{}]. ", dictid);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        SysDictType sysdicttype = sysdicttypeDao.selectById(dictid);
        resData.setData("sysdicttype", sysdicttype);
        log.info("###[服务] 完成查询字典类型 ResultData=[{}]", resData);
        return resData;
    }

    @Override
    public ResultData list(SysDictType sysdicttype) throws Exception {
        log.debug("###[服务] 开始根据条件{}查询字典类型", sysdicttype);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        QueryWrapper<SysDictType> sysdicttypeWrapper = new QueryWrapper<>();
        sysdicttypeWrapper.setEntity(sysdicttype);
        List<SysDictType> sysdicttypes = sysdicttypeDao.selectList(sysdicttypeWrapper);
        resData.setData("sysdicttypes", sysdicttypes);
        log.info("###[服务] 完成查询字典类型 ResultData=[{}]", resData);
        return resData;
    }

    @Override
    public ResultData listPager(SysDictType sysdicttype, Pager page) throws Exception {
        log.debug("###[服务] 开始根据条件{}分页查询字典类型", sysdicttype);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        Page<SysDictType> pageParam = new Page<>(page.getCurrentPage() == null ? 1 : page.getCurrentPage(),
                page.getTotalSize() == null ? 10 : page.getTotalSize()); // 当前页码，每页条数
        QueryWrapper<SysDictType> sysdicttypeWrapper = new QueryWrapper<>();
        sysdicttypeWrapper.setEntity(sysdicttype);
        IPage<SysDictType> pu = sysdicttypeDao.selectPage(pageParam, sysdicttypeWrapper);
        resData.setData("data", pu);

        log.info("###[服务] 完成分页查询字典类型 resData=[{}]", resData);
        return resData;
    }

    @Override
    public ResultData add(SysDictType sysdicttype) throws Exception {
        log.debug("###[服务] 开始添加新字典类型, {}", sysdicttype);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        int inserted = sysdicttypeDao.insert(sysdicttype);
        resData.setData("inserted", inserted);
        log.info("###[服务] 完成添加新字典类型，ResultData=[{}]", resData);
        return resData;
    }

    @Override
    public ResultData update(SysDictType sysdicttype) throws Exception {
        log.debug("###[服务] 开始根据条件{}修改字典类型,", sysdicttype);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        int updated = sysdicttypeDao.updateById(sysdicttype);
        resData.setData("updated", updated);
        log.info("###[服务] 完成修改字典类型，ResultData=[{}]", resData);
        return resData;
    }

    @Override
    public ResultData delete(String dictid) throws Exception {
        log.debug("###[服务] 开始根据条件{}删除字典类型,", dictid);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        ResultData resData = ResultData.init();
        SysDictType sysdicttype = new SysDictType();
        sysdicttype.setDictid(Long.valueOf(dictid));
        int deleted = sysdicttypeDao.deleteById(sysdicttype);
        resData.setData("deleted", deleted);
        log.info("###[服务] 完成删除字典类型，ResultData=[{}]", resData);
        return resData;
    }

    @Override
    public ResultData clearCache() {
        log.debug("###[服务] 开始清除缓存");
        ResultData resData = ResultData.init();
        DictUtils.clearDictCache();
        resData.setData("clearCache", true);
        log.info("###[服务] 完成清除缓存，ResultData=[{}]", resData);
        return resData;
    }
}
