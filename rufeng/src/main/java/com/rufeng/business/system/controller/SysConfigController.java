package com.rufeng.business.system.controller;


import com.rufeng.business.system.domain.po.SysConfig;
import com.rufeng.business.system.service.ISysConfigService;
import com.rufeng.core.framework.aspectj.lang.annotation.Log;
import com.rufeng.core.framework.aspectj.lang.enums.BusinessType;
import com.rufeng.core.framework.db.Pager;
import com.rufeng.core.framework.web.ResultData;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;


/**
 * 参数配置控制器
 *
 * @version v1.0.0
 * @since jdk1.8+
 */
@RestController
@RequestMapping("/system/sysconfig")
public class SysConfigController {
    private Logger log = LoggerFactory.getLogger(SysConfigController.class);

    @Autowired
    private ISysConfigService sysconfigService;

    /**
     * 获取参数配置
     *
     * @param config_id 参数主键
     * @return ResultData
     */
    @Log(title = "获取参数配置", businessType = BusinessType.SELECT)
    @RequestMapping(value = "/get/{config_id}", method = {RequestMethod.GET, RequestMethod.POST})
    public ResultData get(@PathVariable String config_id) throws Exception {
        log.debug("###开始查询参数配置， config_id=[{}].", config_id);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        return sysconfigService.get(config_id);
    }

    /**
     * 查询参数配置
     *
     * @param sysconfig 参数配置对象
     * @return ResultData
     */
    @RequestMapping(value = "/list", method = {RequestMethod.GET})
    public ResultData list(SysConfig sysconfig) throws Exception {
        log.debug("###开始根据条件{}查询参数配置", sysconfig);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        return sysconfigService.list(sysconfig);
    }


    /**
     * 分页查询参数配置
     *
     * @param page      分页对象
     * @param sysconfig 参数配置对象
     * @return ResultData
     */
    @RequestMapping(value = "/list-by-page", method = {RequestMethod.GET})
    public ResultData listPager(SysConfig sysconfig, Pager page) throws Exception {
        log.debug("###开始根据条件{}分页查询参数配置", sysconfig);
        return sysconfigService.listPager(sysconfig, page);
    }

    /**
     * 添加参数配置
     *
     * @param sysconfig 参数配置对象
     * @return ResultData
     */
    @Log(title = "添加参数配置", businessType = BusinessType.INSERT)
    @RequestMapping(value = "/add", method = {RequestMethod.POST})
    public ResultData add(@RequestBody SysConfig sysconfig) throws Exception {
        log.debug("###开始查找添加参数配置， [{}]", sysconfig);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        return sysconfigService.add(sysconfig);
    }

    /**
     * 更新参数配置
     *
     * @param sysconfig 参数配置对象
     * @return ResultData
     */
    @Log(title = "更新参数配置", businessType = BusinessType.UPDATE)
    @RequestMapping(value = "/update", method = {RequestMethod.PUT})
    public ResultData update(@RequestBody SysConfig sysconfig) throws Exception {
        log.debug("###开始修改参数配置， [{}]", sysconfig);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        return sysconfigService.update(sysconfig);
    }

    /**
     * 删除参数配置
     *
     * @param config_id 参数主键
     * @return ResultData
     */
    @Log(title = "删除参数配置", businessType = BusinessType.DELETE)
    @RequestMapping(value = "/delete/{config_id}", method = {RequestMethod.DELETE})
    public ResultData delete(@PathVariable String config_id) throws Exception {
        log.debug("###开始删除参数配置对象，config_id={}.", config_id);
        //These code is generated by machine, if you want to modify the code, suggest you to remove this line
        return sysconfigService.delete(config_id);
    }

    /**
     * 根据参数键名查询参数值
     */
    @RequestMapping(value = "/configKey/{configKey}", method = RequestMethod.GET)
    public ResultData getConfigKey(@PathVariable String configKey) {
        log.debug("###开始根据参数键名查询参数值，configKey={}.", configKey);
        return sysconfigService.selectConfigByKey(configKey);
    }

    /**
     * 清空缓存
     */
    @RequestMapping(value = "/clearCache", method = RequestMethod.DELETE)
    public ResultData clearCache() {
        log.debug("###开始删除参数配置对象");
        ResultData data = ResultData.init();
        sysconfigService.clearCache();
        data.setData("clearCache", true);
        return data;
    }

}